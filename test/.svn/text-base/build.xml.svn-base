<?xml version="1.0"?>
<!--
 *  Copyright(c) 2009 Red Hat Middleware, LLC,
 *  and individual contributors as indicated by the @authors tag.
 *  See the copyright.txt in the distribution for a
 *  full listing of individual contributors.
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License as published by the Free Software Foundation; either
 *  version 2 of the License, or (at your option) any later version.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library in the file COPYING.LIB;
 *  if not, write to the Free Software Foundation, Inc.,
 *  59 Temple Place - Suite 330, Boston, MA 02111-1307, USA
 *
 * @author Jean-Frederic Clere
 * @version $Revision$
-->
<project name="jbossweb_test" default="all" basedir=".">

  <!-- See "build.properties.sample" in the top level directory for all     -->
  <!-- property values you must customize for successful building!!!        -->
  <property file="${user.home}/build.properties"/>
  <property file="build.properties"/>

  <property file="build.properties.default"/>

  <property name="test.classes" value="${basedir}/output/classes"/>
  <property name="test.webapps" value="${basedir}/output/webapps"/>
  <property name="tomcat.classes" value="${basedir}/../output/classes"/>
  <property name="tomcat.tmp" value="${basedir}/output/classes/output/"/>

  <property name="compile.source" value="1.5"/>

  <property name="test.runner" value="junit.textui.TestRunner"/>

  <path id="jbossweb.test.classpath">
    <pathelement location="${test.classes}"/>
    <pathelement location="${junit.jar}"/>
    <pathelement location="${tomcat.classes}"/>
  </path>
 
  <target name="compile" depends="download">

  <mkdir dir="${test.classes}"/>
  <mkdir dir="${test.classes}/conf"/>
  <mkdir dir="${test.webapps}"/>

  <!-- Compile -->
  <javac srcdir="java" destdir="${test.classes}"
         debug="on" debuglevel="lines,vars,source"
         deprecation="${compile.deprecation}"
         source="${compile.source}"
         optimize="${compile.optimize}">
         <classpath refid="jbossweb.test.classpath" />
         <include name="**" />
  </javac>
  	
  	<mkdir dir="${test.webapps}/cometd"/>
    <mkdir dir="${test.webapps}/cometd/WEB-INF/classes"/>
  	
    <copy todir="${test.webapps}/cometd">
       <fileset dir="${basedir}/webapps/cometd" includes="**" />
    </copy>
    <copy todir="${test.webapps}/cometd/WEB-INF/classes">
       <fileset dir="${test.classes}" includes="org/apache/cometd/bayeux/samples/*,org/jboss/web/comet/*" />
    </copy>

  </target>

  <!-- Run the tests -->
  <target name="all" depends="compile">
     <java dir="${test.classes}" classname="${test.runner}" fork="yes">
            <arg value="org.jboss.web.cookies.CookiesTestCase"/>
            <jvmarg line="-Dcluster=${cluster}"/>
            <classpath refid="jbossweb.test.classpath"/>
     </java>
  </target>

  <target name="ssl" depends="compile">
     <mkdir dir="${tomcat.tmp}" />
     <mkdir dir="${tomcat.tmp}/build/webapps/examples" />
     <copy todir="${tomcat.tmp}">
        <fileset dir="${basedir}/java/org/apache/catalina/startup" includes="*.keystore" />
     </copy>
     <copy todir="${tomcat.tmp}/build/webapps/examples">
        <fileset dir="${basedir}/webapps/simple" includes="*.html" />
     </copy>
     <java dir="${test.classes}" classname="${test.runner}" fork="yes">
            <arg value="org.apache.catalina.startup.TestTomcatSSL"/>
            <classpath refid="jbossweb.test.classpath"/>
     </java>
  </target>

  <!-- Download and dependency building -->
  <target name="proxyflags">
    <!-- check proxy parameters. -->
    <condition property="useproxy">
      <equals arg1="${proxy.use}" arg2="on" />
    </condition>
  </target>

  <target name="setproxy" depends="proxyflags" if="useproxy">
    <taskdef name="setproxy"
            classname="org.apache.tools.ant.taskdefs.optional.net.SetProxy" />
    <setproxy proxyhost="${proxy.host}" proxyport="${proxy.port}"
              proxyuser="${proxy.user}" proxypassword="${proxy.password}" />
    <echo message="Using ${proxy.host}:${proxy.port} to download ${sourcefile}"/>
  </target>

  <target name="testexist">
    <echo message="Testing for ${destfile}"/>
    <available file="${destfile}" property="exist"/>
  </target>

  <target name="downloadgz" unless="exist" depends="setproxy,testexist">
    <!-- Download and extract the package -->
    <mkdir dir="${base.path}" />
    <get src="${sourcefile}" dest="${base.path}/file.tar.gz" />
    <gunzip src="${base.path}/file.tar.gz" dest="${base.path}/file.tar"/>
    <untar src="${base.path}/file.tar" dest="${base.path}"/>
    <delete file="${base.path}/file.tar"/>
    <delete file="${base.path}/file.tar.gz"/>
  </target>

  <target name="downloadfile" unless="exist" depends="setproxy,testexist">
    <!-- Download extract the file -->
    <mkdir dir="${destdir}" />
    <get src="${sourcefile}" dest="${destfile}" />
  </target>

  <target name="download" description="Builds and download dependent components">
    <antcall target="downloadfile">
      <param name="sourcefile" value="${junit.jar.loc}"/>
      <param name="destfile" value="${junit.jar}"/>
      <param name="destdir" value="${base-junit.home}"/>
    </antcall>
  </target>

</project>
